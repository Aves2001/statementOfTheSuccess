# Generated by Django 4.1.7 on 2023-03-27 09:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Електронна почта')),
                ('last_name', models.CharField(max_length=50, verbose_name='Прізвище')),
                ('first_name', models.CharField(max_length=50, verbose_name="Ім'я")),
                ('middle_name', models.CharField(max_length=50, verbose_name='По батькові')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата приєднання')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Доступ до адмінки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активний')),
                ('academic_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Академічний статус')),
            ],
            options={
                'verbose_name': 'Викладач',
                'verbose_name_plural': 'Викладачі',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Дисципліна')),
                ('total_hours', models.IntegerField(verbose_name='Загальна кількість годин')),
                ('exam_type', models.CharField(max_length=50, verbose_name='Форма семестрового контролю')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Викладач')),
            ],
            options={
                'verbose_name': 'Дисципліна',
                'verbose_name_plural': 'Дисципліни',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Факультет',
                'verbose_name_plural': 'Факультети',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Група')),
                ('course', models.IntegerField(verbose_name='Курс')),
                ('start_year', models.IntegerField(verbose_name='З якого року')),
                ('end_year', models.IntegerField(verbose_name='По який рік')),
            ],
            options={
                'verbose_name': 'Група',
                'verbose_name_plural': 'Групи',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('number_of_the_scorebook', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Номер залікової книжки')),
                ('last_name', models.CharField(max_length=50, verbose_name='Прізвище')),
                ('first_name', models.CharField(max_length=50, verbose_name="Ім'я")),
                ('middle_name', models.CharField(max_length=50, verbose_name='По батькові')),
                ('admission_year', models.IntegerField(blank=True, null=True, verbose_name='Рік вступу')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенти',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Спеціальність')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.faculty', verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Спеціальність',
                'verbose_name_plural': 'Спеціальності',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_number', models.IntegerField(verbose_name='Номер відомості')),
                ('date', models.DateField(verbose_name='Дата')),
                ('semester', models.IntegerField(verbose_name='Семестр')),
                ('total_hours', models.IntegerField(verbose_name='Загальна кількість годин')),
                ('is_closed', models.BooleanField(verbose_name='Відомість закрита')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.discipline', verbose_name='Дисциплана')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Викладач')),
            ],
            options={
                'verbose_name': 'Відомість',
                'verbose_name_plural': 'Відомості',
            },
        ),
        migrations.CreateModel(
            name='GroupStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student')),
            ],
            options={
                'verbose_name': 'Групи-Студенти',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.speciality', verbose_name='Напрям підготовки (спеціальність)'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(verbose_name='Оцінка')),
                ('grade_date', models.DateField(verbose_name='Дата виставлення оцінки')),
                ('group_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.groupstudent', verbose_name='Студент')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.record', verbose_name='Відомість')),
            ],
            options={
                'verbose_name': 'Оцінка',
                'verbose_name_plural': 'Оцінки',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='faculty',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.faculty'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
